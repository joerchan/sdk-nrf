/*
 * Copyright (c) 2019 - 2020, Nordic Semiconductor ASA
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef NRFX_CONFIG_H__
#define NRFX_CONFIG_H__

#include <RTE_Device.h>

#if RTE_FLASH0
#define NRFX_NVMC_ENABLED 1
#endif

#if RTE_USART0 || RTE_USART1 || RTE_USART2 || RTE_USART3
#define NRFX_UARTE_ENABLED 1
#endif
#if RTE_USART0
#define NRFX_UARTE0_ENABLED 1
#endif
#if RTE_USART1
#define NRFX_UARTE1_ENABLED 1
#endif
#if RTE_USART2
#define NRFX_UARTE2_ENABLED 1
#endif
#if RTE_USART3
#define NRFX_UARTE3_ENABLED 1
#endif

/*
 * For chips with TrustZone support, MDK provides CMSIS-Core peripheral
 * accessing symbols in two flavors, with secure and non-secure base address
 * mappings. Their names contain the suffix _S or _NS, respectively.
 * Because nrfx HALs and drivers require these peripheral accessing symbols
 * without any suffixes, the following macro is provided that will translate
 * their names according to the kind of the target that is built.
 */
#if defined(NRF_TRUSTZONE_NONSECURE)
#define NRF_PERIPH(P) P##_NS
#else
#define NRF_PERIPH(P) P##_S
#endif

#define NRFX_GPIO_P0_SECURE_PINS_MASK  @CONFIG_TFM_PERIPHERAL_GPIO_P0_BITMASK@
#define NRFX_GPIO_P1_SECURE_PINS_MASK  @CONFIG_TFM_PERIPHERAL_GPIO_P1_BITMASK@
#define NRFX_DPPI_SECURE_CHANNELS_MASK @CONFIG_TFM_PERIPHERAL_DPPI_BITMASK@

#if defined(NRF5340_XXAA_APPLICATION)
    #include <nrfx_config_nrf5340_application.h>
#elif defined(NRF9160_XXAA)
    #include <nrfx_config_nrf9160.h>
#else
    #error "Unknown device."
#endif

#endif // NRFX_CONFIG_H__



/*
 * Copyright (c) 2019 - 2020, Nordic Semiconductor ASA
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef NRFX_CONFIG_H__
#define NRFX_CONFIG_H__

#include <RTE_Device.h>

#if RTE_FLASH0
#define NRFX_NVMC_ENABLED 1
#endif

#if RTE_USART0 || RTE_USART1 || RTE_USART2 || RTE_USART3
#define NRFX_UARTE_ENABLED 1
#endif
#if RTE_USART0
#define NRFX_UARTE0_ENABLED 1
#endif
#if RTE_USART1
#define NRFX_UARTE1_ENABLED 1
#endif
#if RTE_USART2
#define NRFX_UARTE2_ENABLED 1
#endif
#if RTE_USART3
#define NRFX_UARTE3_ENABLED 1
#endif

/*
 * For chips with TrustZone support, MDK provides CMSIS-Core peripheral
 * accessing symbols in two flavors, with secure and non-secure base address
 * mappings. Their names contain the suffix _S or _NS, respectively.
 * Because nrfx HALs and drivers require these peripheral accessing symbols
 * without any suffixes, the following macro is provided that will translate
 * their names according to the kind of the target that is built.
 */
#if defined(NRF_TRUSTZONE_NONSECURE)
#define NRF_PERIPH(P) P##_NS
#else
#define NRF_PERIPH(P) P##_S
#endif


#if 0

#ifdef CONFIG_NRFX_ADC
#define NRFX_ADC_ENABLED 1
#endif


#ifdef CONFIG_CLOCK_CONTROL_NRF_K32SRC_RC
#if defined(CONFIG_SOC_SERIES_NRF91X) || defined(CONFIG_SOC_SERIES_NRF53X)
#define NRFX_CLOCK_CONFIG_LF_SRC 1
#else
#define NRFX_CLOCK_CONFIG_LF_SRC 0
#endif
#endif // CONFIG_CLOCK_CONTROL_NRF_K32SRC_RC

#ifdef CONFIG_CLOCK_CONTROL_NRF_K32SRC_XTAL
#if defined(CONFIG_SOC_SERIES_NRF91X) || defined(CONFIG_SOC_SERIES_NRF53X)
#define NRFX_CLOCK_CONFIG_LF_SRC 2
#else
#define NRFX_CLOCK_CONFIG_LF_SRC 1
#endif
#endif // CONFIG_CLOCK_CONTROL_NRF_K32SRC_XTAL

#ifdef CONFIG_CLOCK_CONTROL_NRF_K32SRC_SYNTH
#ifdef CONFIG_SOC_SERIES_NRF53X
#define NRFX_CLOCK_CONFIG_LF_SRC 3
#else
#define NRFX_CLOCK_CONFIG_LF_SRC 2
#endif
#endif // CONFIG_CLOCK_CONTROL_NRF_K32SRC_SYNTH

#ifdef CONFIG_CLOCK_CONTROL_NRF_K32SRC_EXT_LOW_SWING
#define NRFX_CLOCK_CONFIG_LF_SRC 131073
#endif

#ifdef CONFIG_CLOCK_CONTROL_NRF_K32SRC_EXT_FULL_SWING
#define NRFX_CLOCK_CONFIG_LF_SRC 196609
#endif

#ifdef CONFIG_CLOCK_CONTROL_NRF_K32SRC_RC_CALIBRATION
#define NRFX_CLOCK_CONFIG_LF_CAL_ENABLED 1
#endif

#ifdef CONFIG_NRFX_CLOCK_LFXO_TWO_STAGE_ENABLED
#define NRFX_CLOCK_CONFIG_LFXO_TWO_STAGE_ENABLED 1
#endif
#endif

#define NRFX_CLOCK_ENABLED @CONFIG_TFM_NRFX_CLOCK@

#define NRFX_COMP_ENABLED @CONFIG_TFM_NRFX_COMP@

#define NRFX_DPPI_ENABLED @CONFIG_TFM_NRFX_DPPI@

#define NRFX_EGU_ENABLED @CONFIG_TFM_NRFX_EGU@
#define NRFX_EGU0_ENABLED @CONFIG_TFM_NRFX_EGU0@
#define NRFX_EGU1_ENABLED @CONFIG_TFM_NRFX_EGU1@
#define NRFX_EGU2_ENABLED @CONFIG_TFM_NRFX_EGU2@
#define NRFX_EGU3_ENABLED @CONFIG_TFM_NRFX_EGU3@
#define NRFX_EGU4_ENABLED @CONFIG_TFM_NRFX_EGU4@
#define NRFX_EGU5_ENABLED @CONFIG_TFM_NRFX_EGU5@

#define NRFX_GPIOTE_ENABLED @CONFIG_TFM_NRFX_GPIOTE@

#define NRFX_I2S_ENABLED @CONFIG_TFM_NRFX_I2S@

#define NRFX_IPC_ENABLED @CONFIG_TFM_NRFX_IPC@

#define NRFX_LPCOMP_ENABLED @CONFIG_TFM_NRFX_LPCOMP@

#define NRFX_NFCT_ENABLED @CONFIG_TFM_NRFX_NFCT@

#define NRFX_NVMC_ENABLED @CONFIG_TFM_NRFX_NVMC@

#define NRFX_PDM_ENABLED @CONFIG_TFM_NRFX_PDM@

#define NRFX_POWER_ENABLED @CONFIG_TFM_NRFX_POWER@

#define NRFX_PPI_ENABLED @CONFIG_TFM_NRFX_PPI@

#define NRFX_PRS_ENABLED @CONFIG_TFM_NRFX_PRS@
#define NRFX_PRS_BOX_0_ENABLED @CONFIG_TFM_NRFX_PRS_BOX_0@
#define NRFX_PRS_BOX_1_ENABLED @CONFIG_TFM_NRFX_PRS_BOX_1@
#define NRFX_PRS_BOX_2_ENABLED @CONFIG_TFM_NRFX_PRS_BOX_2@
#define NRFX_PRS_BOX_3_ENABLED @CONFIG_TFM_NRFX_PRS_BOX_3@
#define NRFX_PRS_BOX_4_ENABLED @CONFIG_TFM_NRFX_PRS_BOX_4@

#define NRFX_PWM_ENABLED @CONFIG_TFM_NRFX_PWM@
#define NRFX_PWM0_ENABLED @CONFIG_TFM_NRFX_PWM0@
#define NRFX_PWM1_ENABLED @CONFIG_TFM_NRFX_PWM1@
#define NRFX_PWM2_ENABLED @CONFIG_TFM_NRFX_PWM2@
#define NRFX_PWM3_ENABLED @CONFIG_TFM_NRFX_PWM3@

#define NRFX_QDEC_ENABLED @CONFIG_TFM_NRFX_QDEC@

#define NRFX_QSPI_ENABLED @CONFIG_TFM_NRFX_QSPI@

#define NRFX_RNG_ENABLED @CONFIG_TFM_NRFX_RNG@

#define NRFX_RTC_ENABLED @CONFIG_TFM_NRFX_RTC@
#define NRFX_RTC0_ENABLED @CONFIG_TFM_NRFX_RTC0@
#define NRFX_RTC1_ENABLED @CONFIG_TFM_NRFX_RTC1@
#define NRFX_RTC2_ENABLED @CONFIG_TFM_NRFX_RTC2@

#define NRFX_SAADC_ENABLED @CONFIG_TFM_NRFX_SAADC@

#define NRFX_SPI_ENABLED @CONFIG_TFM_NRFX_SPI@
#define NRFX_SPI0_ENABLED @CONFIG_TFM_NRFX_SPI0@
#define NRFX_SPI1_ENABLED @CONFIG_TFM_NRFX_SPI1@
#define NRFX_SPI2_ENABLED @CONFIG_TFM_NRFX_SPI2@

#define NRFX_SPIM_ENABLED @CONFIG_TFM_NRFX_SPIM@
#define NRFX_SPIM0_ENABLED @CONFIG_TFM_NRFX_SPIM0@
#define NRFX_SPIM1_ENABLED @CONFIG_TFM_NRFX_SPIM1@
#define NRFX_SPIM2_ENABLED @CONFIG_TFM_NRFX_SPIM2@
#define NRFX_SPIM3_ENABLED @CONFIG_TFM_NRFX_SPIM3@
#define NRFX_SPIM4_ENABLED @CONFIG_TFM_NRFX_SPIM4@

#define NRFX_SPIS_ENABLED @CONFIG_TFM_NRFX_SPIS@
#define NRFX_SPIS0_ENABLED @CONFIG_TFM_NRFX_SPIS0@
#define NRFX_SPIS1_ENABLED @CONFIG_TFM_NRFX_SPIS1@
#define NRFX_SPIS2_ENABLED @CONFIG_TFM_NRFX_SPIS2@
#define NRFX_SPIS3_ENABLED @CONFIG_TFM_NRFX_SPIS3@

#define NRFX_SYSTICK_ENABLED @CONFIG_TFM_NRFX_SYSTICK@

#define NRFX_TEMP_ENABLED @CONFIG_TFM_NRFX_TEMP@

#define NRFX_TIMER_ENABLED @CONFIG_TFM_NRFX_TIMER@
#define NRFX_TIMER0_ENABLED @CONFIG_TFM_NRFX_TIMER0@
#define NRFX_TIMER1_ENABLED @CONFIG_TFM_NRFX_TIMER1@
#define NRFX_TIMER2_ENABLED @CONFIG_TFM_NRFX_TIMER2@
#define NRFX_TIMER3_ENABLED @CONFIG_TFM_NRFX_TIMER3@
#define NRFX_TIMER4_ENABLED @CONFIG_TFM_NRFX_TIMER4@

#define NRFX_TWI_ENABLED @CONFIG_TFM_NRFX_TWI@
#define NRFX_TWI0_ENABLED @CONFIG_TFM_NRFX_TWI0@
#define NRFX_TWI1_ENABLED @CONFIG_TFM_NRFX_TWI1@

#define NRFX_TWIM_ENABLED @CONFIG_TFM_NRFX_TWIM@
#define NRFX_TWIM0_ENABLED @CONFIG_TFM_NRFX_TWIM0@
#define NRFX_TWIM1_ENABLED @CONFIG_TFM_NRFX_TWIM1@
#define NRFX_TWIM2_ENABLED @CONFIG_TFM_NRFX_TWIM2@
#define NRFX_TWIM3_ENABLED @CONFIG_TFM_NRFX_TWIM3@

#define NRFX_TWIS_ENABLED @CONFIG_TFM_NRFX_TWIS@
#define NRFX_TWIS0_ENABLED @CONFIG_TFM_NRFX_TWIS0@
#define NRFX_TWIS1_ENABLED @CONFIG_TFM_NRFX_TWIS1@
#define NRFX_TWIS2_ENABLED @CONFIG_TFM_NRFX_TWIS2@
#define NRFX_TWIS3_ENABLED @CONFIG_TFM_NRFX_TWIS3@

#define NRFX_UART_ENABLED @CONFIG_TFM_NRFX_UART@
#define NRFX_UART0_ENABLED @CONFIG_TFM_NRFX_UART0@

#define NRFX_UARTE_ENABLED @CONFIG_TFM_NRFX_UARTE@
#define NRFX_UARTE0_ENABLED @CONFIG_TFM_NRFX_UARTE0@
#define NRFX_UARTE1_ENABLED @CONFIG_TFM_NRFX_UARTE1@
#define NRFX_UARTE2_ENABLED @CONFIG_TFM_NRFX_UARTE2@
#define NRFX_UARTE3_ENABLED @CONFIG_TFM_NRFX_UARTE3@

#define NRFX_USBD_ENABLED @CONFIG_TFM_NRFX_USBD@

#define NRFX_USBREG_ENABLED @CONFIG_TFM_NRFX_USBREG@

#define NRFX_WDT_ENABLED @CONFIG_TFM_NRFX_WDT@
#define NRFX_WDT0_ENABLED @CONFIG_TFM_NRFX_WDT0@
#define NRFX_WDT1_ENABLED @CONFIG_TFM_NRFX_WDT1@


#define NRFX_GPIO_P0_SECURE_PINS_MASK  @CONFIG_TFM_PERIPHERAL_GPIO_P0_BITMASK@
#define NRFX_GPIO_P1_SECURE_PINS_MASK  @CONFIG_TFM_PERIPHERAL_GPIO_P1_BITMASK@
#define NRFX_DPPI_SECURE_CHANNELS_MASK @CONFIG_TFM_PERIPHERAL_DPPI_BITMASK@

#if defined(NRF5340_XXAA_APPLICATION)
    #include <nrfx_config_nrf5340_application.h>
#elif defined(NRF9160_XXAA)
    #include <nrfx_config_nrf9160.h>
#else
    #error "Unknown device."
#endif
