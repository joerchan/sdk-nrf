/*
 * Copyright (c) 2021 Nordic Semiconductor
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 *
 */

#ifndef PSA_CRYPTO_CONFIG_H
#define PSA_CRYPTO_CONFIG_H

//#define MBEDTLS_CONFIG_VERSION 0x03000000
#define MBEDTLS_HAVE_ASM
//#define MBEDTLS_NO_UDBL_DIVISION
//#define MBEDTLS_NO_64BIT_MULTIPLICATION
//#define MBEDTLS_HAVE_SSE2
//#define MBEDTLS_HAVE_TIME
//#define MBEDTLS_HAVE_TIME_DATE
#define MBEDTLS_PLATFORM_MEMORY
#cmakedefine MBEDTLS_PLATFORM_NO_STD_FUNCTIONS
#cmakedefine MBEDTLS_PLATFORM_EXIT_ALT
//#define MBEDTLS_PLATFORM_TIME_ALT
#cmakedefine MBEDTLS_PLATFORM_FPRINTF_ALT
#cmakedefine MBEDTLS_PLATFORM_PRINTF_ALT
#cmakedefine MBEDTLS_PLATFORM_SNPRINTF_ALT
//#define MBEDTLS_PLATFORM_NV_SEED_ALT
#cmakedefine MBEDTLS_PLATFORM_SETUP_TEARDOWN_ALT
#cmakedefine MBEDTLS_DEPRECATED_WARNING
#cmakedefine MBEDTLS_DEPRECATED_REMOVED
//#define MBEDTLS_TIMING_ALT
#cmakedefine MBEDTLS_AES_ALT
//#define MBEDTLS_ARIA_ALT
//#define MBEDTLS_CAMELLIA_ALT
#cmakedefine MBEDTLS_CCM_ALT
#cmakedefine MBEDTLS_CHACHA20_ALT
#cmakedefine MBEDTLS_CHACHAPOLY_ALT
#cmakedefine MBEDTLS_CMAC_ALT
//#define MBEDTLS_DES_ALT
#cmakedefine MBEDTLS_DHM_ALT
#cmakedefine MBEDTLS_ECJPAKE_ALT
#cmakedefine MBEDTLS_GCM_ALT
//#define MBEDTLS_NIST_KW_ALT
//#define MBEDTLS_MD5_ALT
#cmakedefine MBEDTLS_POLY1305_ALT
//#define MBEDTLS_RIPEMD160_ALT
#cmakedefine MBEDTLS_RSA_ALT
#cmakedefine MBEDTLS_SHA1_ALT
#cmakedefine MBEDTLS_SHA256_ALT
#cmakedefine MBEDTLS_SHA512_ALT
#cmakedefine MBEDTLS_ECP_ALT
//#define MBEDTLS_MD5_PROCESS_ALT
//#define MBEDTLS_RIPEMD160_PROCESS_ALT
//#define MBEDTLS_SHA1_PROCESS_ALT
//#define MBEDTLS_SHA256_PROCESS_ALT
//#define MBEDTLS_SHA512_PROCESS_ALT
//#define MBEDTLS_DES_SETKEY_ALT
//#define MBEDTLS_DES_CRYPT_ECB_ALT
//#define MBEDTLS_DES3_CRYPT_ECB_ALT
#cmakedefine MBEDTLS_AES_SETKEY_ENC_ALT
#cmakedefine MBEDTLS_AES_SETKEY_DEC_ALT
#cmakedefine MBEDTLS_AES_ENCRYPT_ALT
#cmakedefine MBEDTLS_AES_DECRYPT_ALT
#cmakedefine MBEDTLS_ECDH_GEN_PUBLIC_ALT
#cmakedefine MBEDTLS_ECDH_COMPUTE_SHARED_ALT
#cmakedefine MBEDTLS_ECDSA_VERIFY_ALT
#cmakedefine MBEDTLS_ECDSA_SIGN_ALT
#cmakedefine MBEDTLS_ECDSA_GENKEY_ALT
//#define MBEDTLS_ECP_INTERNAL_ALT
//#define MBEDTLS_ECP_NO_FALLBACK
//#define MBEDTLS_ECP_RANDOMIZE_JAC_ALT
//#define MBEDTLS_ECP_ADD_MIXED_ALT
//#define MBEDTLS_ECP_DOUBLE_JAC_ALT
//#define MBEDTLS_ECP_NORMALIZE_JAC_MANY_ALT
//#define MBEDTLS_ECP_NORMALIZE_JAC_ALT
//#define MBEDTLS_ECP_DOUBLE_ADD_MXZ_ALT
//#define MBEDTLS_ECP_RANDOMIZE_MXZ_ALT
//#define MBEDTLS_ECP_NORMALIZE_MXZ_ALT
#define MBEDTLS_ENTROPY_HARDWARE_ALT
#cmakedefine MBEDTLS_AES_ROM_TABLES
#cmakedefine MBEDTLS_AES_FEWER_TABLES
//#define MBEDTLS_CAMELLIA_SMALL_MEMORY
#cmakedefine MBEDTLS_CIPHER_MODE_CBC
#cmakedefine MBEDTLS_CIPHER_MODE_CFB
#cmakedefine MBEDTLS_CIPHER_MODE_CTR
#cmakedefine MBEDTLS_CIPHER_MODE_OFB
#cmakedefine MBEDTLS_CIPHER_MODE_XTS
//#define MBEDTLS_CIPHER_NULL_CIPHER
#cmakedefine MBEDTLS_CIPHER_PADDING_PKCS7
#cmakedefine MBEDTLS_CIPHER_PADDING_ONE_AND_ZEROS
#cmakedefine MBEDTLS_CIPHER_PADDING_ZEROS_AND_LEN
#cmakedefine MBEDTLS_CIPHER_PADDING_ZEROS
#cmakedefine MBEDTLS_CTR_DRBG_USE_128_BIT_KEY
#cmakedefine MBEDTLS_ECP_DP_SECP192R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_SECP224R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_SECP256R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_SECP384R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_SECP521R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_SECP192K1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_SECP224K1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_SECP256K1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_BP256R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_BP384R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_BP512R1_ENABLED
#cmakedefine MBEDTLS_ECP_DP_CURVE25519_ENABLED
#cmakedefine MBEDTLS_ECP_DP_CURVE448_ENABLED
#define MBEDTLS_ECP_NIST_OPTIM
//#define MBEDTLS_ECP_RESTARTABLE
#cmakedefine MBEDTLS_ECDSA_DETERMINISTIC
#cmakedefine MBEDTLS_KEY_EXCHANGE_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED
#define MBEDTLS_PK_PARSE_EC_EXTENDED
#define MBEDTLS_ERROR_STRERROR_DUMMY
#cmakedefine MBEDTLS_GENPRIME
//#define MBEDTLS_FS_IO
//#define MBEDTLS_NO_DEFAULT_ENTROPY_SOURCES
#define MBEDTLS_NO_PLATFORM_ENTROPY
#define MBEDTLS_ENTROPY_FORCE_SHA256
//#define MBEDTLS_ENTROPY_NV_SEED
//#define MBEDTLS_PSA_CRYPTO_KEY_ID_ENCODES_OWNER
//#define MBEDTLS_MEMORY_DEBUG
//#define MBEDTLS_MEMORY_BACKTRACE
//#define MBEDTLS_PK_RSA_ALT_SUPPORT
#cmakedefine MBEDTLS_PKCS1_V15
#cmakedefine MBEDTLS_PKCS1_V21
//#define MBEDTLS_PSA_CRYPTO_BUILTIN_KEYS
#cmakedefine MBEDTLS_PSA_CRYPTO_CLIENT
//#define MBEDTLS_PSA_CRYPTO_DRIVERS
#cmakedefine MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG
#cmakedefine MBEDTLS_PSA_CRYPTO_SPM
//#define MBEDTLS_PSA_INJECT_ENTROPY
//#define MBEDTLS_RSA_NO_CRT
//#define MBEDTLS_SELF_TEST
#cmakedefine MBEDTLS_SHA256_SMALLER
#cmakedefine MBEDTLS_SHA512_SMALLER
#cmakedefine MBEDTLS_SSL_ALL_ALERT_MESSAGES
#cmakedefine MBEDTLS_SSL_DTLS_CONNECTION_ID
//#define MBEDTLS_SSL_ASYNC_PRIVATE
#cmakedefine MBEDTLS_SSL_CONTEXT_SERIALIZATION
#cmakedefine MBEDTLS_SSL_DEBUG_ALL
#cmakedefine MBEDTLS_SSL_ENCRYPT_THEN_MAC
#cmakedefine MBEDTLS_SSL_EXTENDED_MASTER_SECRET
#cmakedefine MBEDTLS_SSL_KEEP_PEER_CERTIFICATE
#cmakedefine MBEDTLS_SSL_RENEGOTIATION
#define MBEDTLS_SSL_MAX_FRAGMENT_LENGTH
#cmakedefine MBEDTLS_SSL_PROTO_TLS1_2
//#define MBEDTLS_SSL_PROTO_TLS1_3_EXPERIMENTAL
#cmakedefine MBEDTLS_SSL_PROTO_DTLS
#cmakedefine MBEDTLS_SSL_ALPN -- TODO: ?
#cmakedefine MBEDTLS_SSL_DTLS_ANTI_REPLAY
#cmakedefine MBEDTLS_SSL_DTLS_HELLO_VERIFY
#cmakedefine MBEDTLS_SSL_DTLS_SRTP
#cmakedefine MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
#cmakedefine MBEDTLS_SSL_SESSION_TICKETS
#cmakedefine MBEDTLS_SSL_EXPORT_KEYS
#cmakedefine MBEDTLS_SSL_SERVER_NAME_INDICATION
//#define MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
//#define MBEDTLS_TEST_CONSTANT_FLOW_MEMSAN
//#define MBEDTLS_TEST_CONSTANT_FLOW_VALGRIND
//#define MBEDTLS_TEST_HOOKS
#cmakedefine MBEDTLS_THREADING_ALT
//#define MBEDTLS_THREADING_PTHREAD
#cmakedefine MBEDTLS_USE_PSA_CRYPTO
//#define MBEDTLS_PSA_CRYPTO_CONFIG
#define MBEDTLS_VERSION_FEATURES
//#define MBEDTLS_X509_TRUSTED_CERTIFICATE_CALLBACK
#cmakedefine MBEDTLS_X509_REMOVE_INFO
#cmakedefine MBEDTLS_X509_RSASSA_PSS_SUPPORT
//#define MBEDTLS_AESNI_C
#cmakedefine MBEDTLS_AES_C
#define MBEDTLS_ASN1_PARSE_C
#define MBEDTLS_ASN1_WRITE_C
#define MBEDTLS_BASE64_C
#define MBEDTLS_BIGNUM_C
#cmakedefine MBEDTLS_CAMELLIA_C
#cmakedefine MBEDTLS_ARIA_C
#cmakedefine MBEDTLS_CCM_C
#cmakedefine MBEDTLS_CHACHA20_C
#cmakedefine MBEDTLS_CHACHAPOLY_C
#cmakedefine MBEDTLS_CIPHER_C
#cmakedefine MBEDTLS_CMAC_C
#cmakedefine MBEDTLS_CTR_DRBG_C
#cmakedefine MBEDTLS_DEBUG_C
//#define MBEDTLS_DES_C
#cmakedefine MBEDTLS_DHM_C
#cmakedefine MBEDTLS_ECDH_C
#cmakedefine MBEDTLS_ECDSA_C
#cmakedefine MBEDTLS_ECJPAKE_C
#cmakedefine MBEDTLS_ECP_C
#cmakedefine MBEDTLS_ENTROPY_C
#cmakedefine MBEDTLS_ERROR_C
#cmakedefine MBEDTLS_GCM_C
#cmakedefine MBEDTLS_HKDF_C
#cmakedefine MBEDTLS_HMAC_DRBG_C
//#define MBEDTLS_NIST_KW_C
#cmakedefine MBEDTLS_MD_C
#cmakedefine MBEDTLS_MD5_C
#define MBEDTLS_MEMORY_BUFFER_ALLOC_C
//#define MBEDTLS_NET_C
#define MBEDTLS_OID_C
//#define MBEDTLS_PADLOCK_C
#define MBEDTLS_PEM_PARSE_C
#define MBEDTLS_PEM_WRITE_C
#cmakedefine MBEDTLS_PK_C
#cmakedefine MBEDTLS_PK_PARSE_C
#cmakedefine MBEDTLS_PK_WRITE_C
#cmakedefine MBEDTLS_PKCS5_C
//#define MBEDTLS_PKCS12_C
#define MBEDTLS_PLATFORM_C
#cmakedefine MBEDTLS_POLY1305_C
#cmakedefine MBEDTLS_PSA_CRYPTO_C
//#define MBEDTLS_PSA_CRYPTO_SE_C
#cmakedefine MBEDTLS_PSA_CRYPTO_STORAGE_C
//#define MBEDTLS_PSA_ITS_FILE_C
#cmakedefine MBEDTLS_RIPEMD160_C
#cmakedefine MBEDTLS_RSA_C
#cmakedefine MBEDTLS_SHA1_C
#cmakedefine MBEDTLS_SHA224_C
#cmakedefine MBEDTLS_SHA256_C
#cmakedefine MBEDTLS_SHA384_C
#cmakedefine MBEDTLS_SHA512_C
#cmakedefine MBEDTLS_SSL_CACHE_C
#cmakedefine MBEDTLS_SSL_COOKIE_C
#cmakedefine MBEDTLS_SSL_TICKET_C
#cmakedefine MBEDTLS_SSL_CLI_C
#cmakedefine MBEDTLS_SSL_SRV_C
#cmakedefine MBEDTLS_SSL_TLS_C
#cmakedefine MBEDTLS_THREADING_C
//#define MBEDTLS_TIMING_C
#define MBEDTLS_VERSION_C
#cmakedefine MBEDTLS_X509_USE_C
#cmakedefine MBEDTLS_X509_CRT_PARSE_C
#cmakedefine MBEDTLS_X509_CRL_PARSE_C
#cmakedefine MBEDTLS_X509_CSR_PARSE_C
#cmakedefine MBEDTLS_X509_CREATE_C
#cmakedefine MBEDTLS_X509_CRT_WRITE_C
#cmakedefine MBEDTLS_X509_CSR_WRITE_C
#cmakedefine MBEDTLS_MPI_WINDOW_SIZE       @MBEDTLS_MPI_WINDOW_SIZE@
#cmakedefine MBEDTLS_MPI_MAX_SIZE          @MBEDTLS_MPI_MAX_SIZE@
//#define MBEDTLS_CTR_DRBG_ENTROPY_LEN               48
#define MBEDTLS_CTR_DRBG_RESEED_INTERVAL            0xFFF0
//#define MBEDTLS_CTR_DRBG_MAX_INPUT                256
//#define MBEDTLS_CTR_DRBG_MAX_REQUEST             1024
//#define MBEDTLS_CTR_DRBG_MAX_SEED_INPUT           384
//#define MBEDTLS_HMAC_DRBG_RESEED_INTERVAL   10000
//#define MBEDTLS_HMAC_DRBG_MAX_INPUT           256
//#define MBEDTLS_HMAC_DRBG_MAX_REQUEST        1024
//#define MBEDTLS_HMAC_DRBG_MAX_SEED_INPUT      384
#cmakedefine MBEDTLS_ECP_WINDOW_SIZE       @MBEDTLS_ECP_WINDOW_SIZE@
#cmakedefine MBEDTLS_ECP_FIXED_POINT_OPTIM @MBEDTLS_ECP_FIXED_POINT_OPTIM@
#cmakedefine MBEDTLS_ENTROPY_MAX_SOURCES             @MBEDTLS_ENTROPY_MAX_SOURCES@
#define MBEDTLS_ENTROPY_MAX_GATHER                   144
//#define MBEDTLS_ENTROPY_MIN_HARDWARE               32
//#define MBEDTLS_MEMORY_ALIGN_MULTIPLE      4
//#define MBEDTLS_PLATFORM_STD_MEM_HDR   <stdlib.h>
//#define MBEDTLS_PLATFORM_STD_CALLOC        calloc
//#define MBEDTLS_PLATFORM_STD_FREE            free
//#define MBEDTLS_PLATFORM_STD_EXIT            exit
//#define MBEDTLS_PLATFORM_STD_TIME            time
//#define MBEDTLS_PLATFORM_STD_FPRINTF      fprintf
//#define MBEDTLS_PLATFORM_STD_PRINTF        printf
//#define MBEDTLS_PLATFORM_STD_SNPRINTF    snprintf
//#define MBEDTLS_PLATFORM_STD_EXIT_SUCCESS       0
//#define MBEDTLS_PLATFORM_STD_EXIT_FAILURE       1
//#define MBEDTLS_PLATFORM_STD_NV_SEED_READ   mbedtls_platform_std_nv_seed_read
//#define MBEDTLS_PLATFORM_STD_NV_SEED_WRITE  mbedtls_platform_std_nv_seed_write
//#define MBEDTLS_PLATFORM_STD_NV_SEED_FILE  "seedfile"
//#define MBEDTLS_PLATFORM_CALLOC_MACRO        calloc
//#define MBEDTLS_PLATFORM_FREE_MACRO            free
//#define MBEDTLS_PLATFORM_EXIT_MACRO            exit
//#define MBEDTLS_PLATFORM_TIME_MACRO            time
//#define MBEDTLS_PLATFORM_TIME_TYPE_MACRO       time_t
//#define MBEDTLS_PLATFORM_FPRINTF_MACRO      fprintf
//#define MBEDTLS_PLATFORM_PRINTF_MACRO        printf
//#define MBEDTLS_PLATFORM_SNPRINTF_MACRO    snprintf
//#define MBEDTLS_PLATFORM_VSNPRINTF_MACRO    vsnprintf
//#define MBEDTLS_PLATFORM_NV_SEED_READ_MACRO   mbedtls_platform_std_nv_seed_read
//#define MBEDTLS_PLATFORM_NV_SEED_WRITE_MACRO  mbedtls_platform_std_nv_seed_write
//#define MBEDTLS_PSA_HMAC_DRBG_MD_TYPE MBEDTLS_MD_SHA256
//#define MBEDTLS_PSA_KEY_SLOT_COUNT 32
//#define MBEDTLS_SSL_CACHE_DEFAULT_TIMEOUT       86400
//#define MBEDTLS_SSL_CACHE_DEFAULT_MAX_ENTRIES      50
#cmakedefine MBEDTLS_SSL_IN_CONTENT_LEN              @MBEDTLS_SSL_IN_CONTENT_LEN@
//#define MBEDTLS_SSL_CID_IN_LEN_MAX 32
//#define MBEDTLS_SSL_CID_OUT_LEN_MAX 32
//#define MBEDTLS_SSL_CID_TLS1_3_PADDING_GRANULARITY 16
#cmakedefine MBEDTLS_SSL_OUT_CONTENT_LEN             @MBEDTLS_SSL_OUT_CONTENT_LEN@
//#define MBEDTLS_SSL_DTLS_MAX_BUFFERING             32768
//#define MBEDTLS_PSK_MAX_LEN               32
//#define MBEDTLS_SSL_COOKIE_TIMEOUT        60
#cmakedefine MBEDTLS_SSL_CIPHERSUITES @MBEDTLS_SSL_CIPHERSUITES@
//#define MBEDTLS_X509_MAX_INTERMEDIATE_CA   8
//#define MBEDTLS_X509_MAX_FILE_PATH_LEN     512
#cmakedefine MBEDTLS_PLATFORM_ZEROIZE_ALT
//#define MBEDTLS_PLATFORM_GMTIME_R_ALT
//#define MBEDTLS_ECDH_VARIANT_EVEREST_ENABLED

#if defined(CONFIG_MBEDTLS_OPENTHREAD_OPTIMIZATIONS_ENABLED)
#define MBEDTLS_MPI_WINDOW_SIZE            1
#define MBEDTLS_MPI_MAX_SIZE              32
#define MBEDTLS_ECP_WINDOW_SIZE            2
#define MBEDTLS_ECP_FIXED_POINT_OPTIM      0
#endif

#cmakedefine PSA_CORE_OBERON                                    @PSA_CORE_OBERON@

#cmakedefine PSA_WANT_GENERATE_RANDOM                           @PSA_WANT_GENERATE_RANDOM@
#cmakedefine PSA_WANT_ALG_CTR_DRBG                              @PSA_WANT_ALG_CTR_DRBG@
#cmakedefine PSA_WANT_ALG_HMAC_DRBG                             @PSA_WANT_ALG_HMAC_DRBG@
/*
 * CBC-MAC is not yet supported via the PSA API in Mbed TLS.
 */
//#define PSA_WANT_ALG_CBC_MAC
#cmakedefine PSA_WANT_ALG_CBC_NO_PADDING                        @PSA_WANT_ALG_CBC_NO_PADDING@
#cmakedefine PSA_WANT_ALG_CBC_PKCS7                             @PSA_WANT_ALG_CBC_PKCS7@
#cmakedefine PSA_WANT_ALG_CCM                                   @PSA_WANT_ALG_CCM@
#cmakedefine PSA_WANT_ALG_CMAC                                  @PSA_WANT_ALG_CMAC@
#cmakedefine PSA_WANT_ALG_CFB                                   @PSA_WANT_ALG_CFB@
#cmakedefine PSA_WANT_ALG_CHACHA20_POLY1305                     @PSA_WANT_ALG_CHACHA20_POLY1305@
#cmakedefine PSA_WANT_ALG_CMAC                                  @PSA_WANT_ALG_CMAC@
#cmakedefine PSA_WANT_ALG_CTR                                   @PSA_WANT_ALG_CTR@
#cmakedefine PSA_WANT_ALG_DETERMINISTIC_ECDSA                   @PSA_WANT_ALG_DETERMINISTIC_ECDSA@
#cmakedefine PSA_WANT_ALG_ECB_NO_PADDING                        @PSA_WANT_ALG_ECB_NO_PADDING@
#cmakedefine PSA_WANT_ALG_ECDH                                  @PSA_WANT_ALG_ECDH@
#cmakedefine PSA_WANT_ALG_ECDSA                                 @PSA_WANT_ALG_ECDSA@
#cmakedefine PSA_WANT_ALG_GCM                                   @PSA_WANT_ALG_GCM@
#cmakedefine PSA_WANT_ALG_HKDF                                  @PSA_WANT_ALG_HKDF@
#cmakedefine PSA_WANT_ALG_HMAC                                  @PSA_WANT_ALG_HMAC@
#cmakedefine PSA_WANT_ALG_MD5                                   @PSA_WANT_ALG_MD5@
#cmakedefine PSA_WANT_ALG_OFB                                   @PSA_WANT_ALG_OFB@
#cmakedefine PSA_WANT_ALG_PBKDF2_HMAC                           @PSA_WANT_ALG_PBKDF2_HMAC@
#cmakedefine PSA_WANT_ALG_PBKDF2_AES_CMAC_PRF_128               @PSA_WANT_ALG_PBKDF2_AES_CMAC_PRF_128@
#cmakedefine PSA_WANT_ALG_RIPEMD160                             @PSA_WANT_ALG_RIPEMD160@
#cmakedefine PSA_WANT_ALG_RSA_OAEP                              @PSA_WANT_ALG_RSA_OAEP@
#cmakedefine PSA_WANT_ALG_RSA_PKCS1V15_CRYPT                    @PSA_WANT_ALG_RSA_PKCS1V15_CRYPT@
#cmakedefine PSA_WANT_ALG_RSA_PKCS1V15_SIGN                     @PSA_WANT_ALG_RSA_PKCS1V15_SIGN@
#cmakedefine PSA_WANT_ALG_RSA_PSS                               @PSA_WANT_ALG_RSA_PSS@
#cmakedefine PSA_WANT_ALG_SHA_1                                 @PSA_WANT_ALG_SHA_1@
#cmakedefine PSA_WANT_ALG_SHA_224                               @PSA_WANT_ALG_SHA_224@
#cmakedefine PSA_WANT_ALG_SHA_256                               @PSA_WANT_ALG_SHA_256@
#cmakedefine PSA_WANT_ALG_SHA_384                               @PSA_WANT_ALG_SHA_384@
#cmakedefine PSA_WANT_ALG_SHA_512                               @PSA_WANT_ALG_SHA_512@
#cmakedefine PSA_WANT_ALG_STREAM_CIPHER                         @PSA_WANT_ALG_STREAM_CIPHER@
#cmakedefine PSA_WANT_ALG_JPAKE                                 @PSA_WANT_ALG_JPAKE@
#cmakedefine PSA_WANT_ALG_SPAKE2P                               @PSA_WANT_ALG_SPAKE2P@
#cmakedefine PSA_WANT_ALG_SRP                                   @PSA_WANT_ALG_SRP@
#cmakedefine PSA_WANT_ALG_TLS12_PRF                             @PSA_WANT_ALG_TLS12_PRF@
#cmakedefine PSA_WANT_ALG_TLS12_PSK_TO_MS                       @PSA_WANT_ALG_TLS12_PSK_TO_MS@
#cmakedefine PSA_WANT_ALG_TLS12_ECJPAKE_TO_PMS                  @PSA_WANT_ALG_TLS12_ECJPAKE_TO_PMS@
#cmakedefine PSA_WANT_ALG_XTS                                   @PSA_WANT_ALG_XTS@

#cmakedefine PSA_WANT_ECC_BRAINPOOL_P_R1_256                    @PSA_WANT_ECC_BRAINPOOL_P_R1_256@
#cmakedefine PSA_WANT_ECC_BRAINPOOL_P_R1_384                    @PSA_WANT_ECC_BRAINPOOL_P_R1_384@
#cmakedefine PSA_WANT_ECC_BRAINPOOL_P_R1_512                    @PSA_WANT_ECC_BRAINPOOL_P_R1_512@
#cmakedefine PSA_WANT_ECC_MONTGOMERY_255                        @PSA_WANT_ECC_MONTGOMERY_255@
#cmakedefine PSA_WANT_ECC_MONTGOMERY_448                        @PSA_WANT_ECC_MONTGOMERY_448@
#cmakedefine PSA_WANT_ECC_SECP_K1_192                           @PSA_WANT_ECC_SECP_K1_192@
/*
 * SECP224K1 is buggy via the PSA API in Mbed TLS
 * (https://github.com/ARMmbed/mbedtls/issues/3541). Thus, do not enable it by
 * default.
 */
#cmakedefine PSA_WANT_ECC_SECP_K1_224                           @PSA_WANT_ECC_SECP_K1_224@
#cmakedefine PSA_WANT_ECC_SECP_K1_256                           @PSA_WANT_ECC_SECP_K1_256@
#cmakedefine PSA_WANT_ECC_SECP_R1_192                           @PSA_WANT_ECC_SECP_R1_192@
#cmakedefine PSA_WANT_ECC_SECP_R1_224                           @PSA_WANT_ECC_SECP_R1_224@
#cmakedefine PSA_WANT_ECC_SECP_R1_256                           @PSA_WANT_ECC_SECP_R1_256@
#cmakedefine PSA_WANT_ECC_SECP_R1_384                           @PSA_WANT_ECC_SECP_R1_384@
#cmakedefine PSA_WANT_ECC_SECP_R1_521                           @PSA_WANT_ECC_SECP_R1_521@

#cmakedefine PSA_WANT_KEY_TYPE_DERIVE                           @PSA_WANT_KEY_TYPE_DERIVE@
#cmakedefine PSA_WANT_KEY_TYPE_HMAC                             @PSA_WANT_KEY_TYPE_HMAC@
#cmakedefine PSA_WANT_KEY_TYPE_AES                              @PSA_WANT_KEY_TYPE_AES@
#cmakedefine PSA_WANT_KEY_TYPE_ARIA                             @PSA_WANT_KEY_TYPE_ARIA@
#cmakedefine PSA_WANT_KEY_TYPE_CAMELLIA                         @PSA_WANT_KEY_TYPE_CAMELLIA@
#cmakedefine PSA_WANT_KEY_TYPE_CHACHA20                         @PSA_WANT_KEY_TYPE_CHACHA20@
#cmakedefine PSA_WANT_KEY_TYPE_DES                              @PSA_WANT_KEY_TYPE_DES@
#cmakedefine PSA_WANT_KEY_TYPE_ECC_KEY_PAIR                     @PSA_WANT_KEY_TYPE_ECC_KEY_PAIR@
#cmakedefine PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY                   @PSA_WANT_KEY_TYPE_ECC_PUBLIC_KEY@
#cmakedefine PSA_WANT_KEY_TYPE_RAW_DATA                         @PSA_WANT_KEY_TYPE_RAW_DATA@
#cmakedefine PSA_WANT_KEY_TYPE_RSA_KEY_PAIR                     @PSA_WANT_KEY_TYPE_RSA_KEY_PAIR@
#cmakedefine PSA_WANT_KEY_TYPE_RSA_PUBLIC_KEY                   @PSA_WANT_KEY_TYPE_RSA_PUBLIC_KEY@

/*
 * Accelerated key types
 */
#cmakedefine MBEDTLS_PSA_ACCEL_KEY_TYPE_SUPPORT                 @MBEDTLS_PSA_ACCEL_KEY_TYPE_SUPPORT@
#cmakedefine MBEDTLS_PSA_ACCEL_KEY_TYPE_ECC_KEY_PAIR            @MBEDTLS_PSA_ACCEL_KEY_TYPE_ECC_KEY_PAIR@
#cmakedefine MBEDTLS_PSA_ACCEL_KEY_TYPE_ECC_PUBLIC_KEY          @MBEDTLS_PSA_ACCEL_KEY_TYPE_ECC_PUBLIC_KEY@
#cmakedefine MBEDTLS_PSA_ACCEL_KEY_TYPE_RSA_KEY_PAIR            @MBEDTLS_PSA_ACCEL_KEY_TYPE_RSA_KEY_PAIR@
#cmakedefine MBEDTLS_PSA_ACCEL_KEY_TYPE_RSA_PUBLIC_KEY          @MBEDTLS_PSA_ACCEL_KEY_TYPE_RSA_PUBLIC_KEY@
#cmakedefine MBEDTLS_PSA_ACCEL_KEY_TYPE_AES                     @MBEDTLS_PSA_ACCEL_KEY_TYPE_AES@
#cmakedefine MBEDTLS_PSA_ACCEL_KEY_TYPE_CHACHA20                @MBEDTLS_PSA_ACCEL_KEY_TYPE_CHACHA20@

/*
 * nrf_cc3xx_platform driver configurations
 */
#cmakedefine PSA_CRYPTO_DRIVER_ALG_PRNG_CC3XX_PLATFORM          @PSA_CRYPTO_DRIVER_ALG_PRNG_CC3XX_PLATFORM@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CTR_DRBG_CC3XX_PLATFORM      @PSA_CRYPTO_DRIVER_ALG_CTR_DRBG_CC3XX_PLATFORM@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_HMAC_DRBG_CC3XX_PLATFORM     @PSA_CRYPTO_DRIVER_ALG_HMAC_DRBG_CC3XX_PLATFORM@

/*
 * PSA driver configurations
 */
#cmakedefine PSA_CRYPTO_ACCELERATOR_DRIVER_PRESENT @PSA_CRYPTO_ACCELERATOR_DRIVER_PRESENT@

/*
 * nrf_cc3xx driver configurations
 */
#cmakedefine PSA_CRYPTO_DRIVER_CC3XX                            @PSA_CRYPTO_DRIVER_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_CIPHER_SUPPORT_CC3XX         @PSA_CRYPTO_DRIVER_HAS_CIPHER_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_AEAD_SUPPORT_CC3XX           @PSA_CRYPTO_DRIVER_HAS_AEAD_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_MAC_SUPPORT_CC3XX            @PSA_CRYPTO_DRIVER_HAS_MAC_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_HASH_SUPPORT_CC3XX           @PSA_CRYPTO_DRIVER_HAS_HASH_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ASYM_ENCRYPT_SUPPORT_CC3XX   @PSA_CRYPTO_DRIVER_HAS_ASYM_ENCRYPT_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ASYM_SIGN_SUPPORT_CC3XX      @PSA_CRYPTO_DRIVER_HAS_ASYM_SIGN_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ECC_SUPPORT_CC3XX            @PSA_CRYPTO_DRIVER_HAS_ECC_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_RSA_SUPPORT_CC3XX            @PSA_CRYPTO_DRIVER_HAS_RSA_SUPPORT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ACCEL_KEY_TYPES_CC3XX        @PSA_CRYPTO_DRIVER_HAS_ACCEL_KEY_TYPES_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CBC_MAC_CC3XX                @PSA_CRYPTO_DRIVER_ALG_CBC_MAC_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CBC_NO_PADDING_CC3XX         @PSA_CRYPTO_DRIVER_ALG_CBC_NO_PADDING_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CBC_PKCS7_CC3XX              @PSA_CRYPTO_DRIVER_ALG_CBC_PKCS7_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CCM_CC3XX                    @PSA_CRYPTO_DRIVER_ALG_CCM_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_OFB_CC3XX                    @PSA_CRYPTO_DRIVER_ALG_OFB_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CHACHA20_POLY1305_CC3XX      @PSA_CRYPTO_DRIVER_ALG_CHACHA20_POLY1305_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CMAC_CC3XX                   @PSA_CRYPTO_DRIVER_ALG_CMAC_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CTR_CC3XX                    @PSA_CRYPTO_DRIVER_ALG_CTR_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_DETERMINISTIC_ECDSA_CC3XX    @PSA_CRYPTO_DRIVER_ALG_DETERMINISTIC_ECDSA_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_ECB_NO_PADDING_CC3XX         @PSA_CRYPTO_DRIVER_ALG_ECB_NO_PADDING_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_ECDH_CC3XX                   @PSA_CRYPTO_DRIVER_ALG_ECDH_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_ECDSA_CC3XX                  @PSA_CRYPTO_DRIVER_ALG_ECDSA_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_GCM_CC3XX                    @PSA_CRYPTO_DRIVER_ALG_GCM_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_HKDF_CC3XX                   @PSA_CRYPTO_DRIVER_ALG_HKDF_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_HMAC_CC3XX                   @PSA_CRYPTO_DRIVER_ALG_HMAC_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_MD5_CC3XX                    @PSA_CRYPTO_DRIVER_ALG_MD5_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_PBKDF2_HMAC_CC3XX            @PSA_CRYPTO_DRIVER_ALG_PBKDF2_HMAC_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_RSA_OAEP_CC3XX               @PSA_CRYPTO_DRIVER_ALG_RSA_OAEP_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_CRYPT_CC3XX     @PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_CRYPT_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_SIGN_CC3XX      @PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_SIGN_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_1_CC3XX                  @PSA_CRYPTO_DRIVER_ALG_SHA_1_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_224_CC3XX                @PSA_CRYPTO_DRIVER_ALG_SHA_224_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_256_CC3XX                @PSA_CRYPTO_DRIVER_ALG_SHA_256_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_STREAM_CIPHER_CC3XX          @PSA_CRYPTO_DRIVER_ALG_STREAM_CIPHER_CC3XX@

#cmakedefine PSA_CRYPTO_DRIVER_ECC_BRAINPOOL_P_R1_256_CC3XX     @PSA_CRYPTO_DRIVER_ECC_BRAINPOOL_P_R1_256_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_MONTGOMERY_255_CC3XX         @PSA_CRYPTO_DRIVER_ECC_MONTGOMERY_255_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_K1_192_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_K1_192_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_K1_224_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_K1_224_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_K1_256_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_K1_256_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_192_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_R1_192_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_224_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_R1_224_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_256_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_R1_256_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_384_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_R1_384_CC3XX@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_521_CC3XX            @PSA_CRYPTO_DRIVER_ECC_SECP_R1_521_CC3XX@

#cmakedefine PSA_CRYPTO_DRIVER_ALG_XTS_CC3XX                    @PSA_CRYPTO_DRIVER_ALG_XTS_CC3XX@

/*
 * nrf_oberon driver configurations
 */
#cmakedefine PSA_CRYPTO_DRIVER_OBERON                           @PSA_CRYPTO_DRIVER_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_CIPHER_SUPPORT_OBERON        @PSA_CRYPTO_DRIVER_HAS_CIPHER_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_AEAD_SUPPORT_OBERON          @PSA_CRYPTO_DRIVER_HAS_AEAD_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_MAC_SUPPORT_OBERON           @PSA_CRYPTO_DRIVER_HAS_MAC_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_HASH_SUPPORT_OBERON          @PSA_CRYPTO_DRIVER_HAS_HASH_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_KDF_SUPPORT_OBERON           @PSA_CRYPTO_DRIVER_HAS_KDF_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ASYM_ENCRYPT_SUPPORT_OBERON  @PSA_CRYPTO_DRIVER_HAS_ASYM_ENCRYPT_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ASYM_SIGN_SUPPORT_OBERON     @PSA_CRYPTO_DRIVER_HAS_ASYM_SIGN_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ECC_SUPPORT_OBERON           @PSA_CRYPTO_DRIVER_HAS_ECC_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_RSA_SUPPORT_OBERON           @PSA_CRYPTO_DRIVER_HAS_RSA_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_RSA_CRYPT_SUPPORT_OBERON     @PSA_CRYPTO_DRIVER_HAS_RSA_CRYPT_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_RSA_SIGN_SUPPORT_OBERON      @PSA_CRYPTO_DRIVER_HAS_RSA_SIGN_SUPPORT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_HAS_ACCEL_KEY_TYPES_OBERON       @PSA_CRYPTO_DRIVER_HAS_ACCEL_KEY_TYPES_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_PRNG_OBERON                  @PSA_CRYPTO_DRIVER_ALG_PRNG_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CTR_DRBG_OBERON              @PSA_CRYPTO_DRIVER_ALG_CTR_DRBG_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_HMAC_DRBG_OBERON             @PSA_CRYPTO_DRIVER_ALG_HMAC_DRBG_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CBC_NO_PADDING_OBERON        @PSA_CRYPTO_DRIVER_ALG_CBC_NO_PADDING_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CBC_PKCS7_OBERON             @PSA_CRYPTO_DRIVER_ALG_CBC_PKCS7_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CCM_OBERON                   @PSA_CRYPTO_DRIVER_ALG_CCM_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CHACHA20_POLY1305_OBERON     @PSA_CRYPTO_DRIVER_ALG_CHACHA20_POLY1305_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CMAC_OBERON                  @PSA_CRYPTO_DRIVER_ALG_CMAC_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_CTR_OBERON                   @PSA_CRYPTO_DRIVER_ALG_CTR_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_DETERMINISTIC_ECDSA_OBERON   @PSA_CRYPTO_DRIVER_ALG_DETERMINISTIC_ECDSA_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_ECB_NO_PADDING_OBERON        @PSA_CRYPTO_DRIVER_ALG_ECB_NO_PADDING_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_ECDH_OBERON                  @PSA_CRYPTO_DRIVER_ALG_ECDH_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_ECDSA_OBERON                 @PSA_CRYPTO_DRIVER_ALG_ECDSA_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_GCM_OBERON                   @PSA_CRYPTO_DRIVER_ALG_GCM_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_HKDF_OBERON                  @PSA_CRYPTO_DRIVER_ALG_HKDF_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_PBKDF2_HMAC_OBERON           @PSA_CRYPTO_DRIVER_ALG_PBKDF2_HMAC_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_PBKDF2_AES_CMAC_PRF_128_OBERON @PSA_CRYPTO_DRIVER_ALG_PBKDF2_AES_CMAC_PRF_128_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_HMAC_OBERON                  @PSA_CRYPTO_DRIVER_ALG_HMAC_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_RSA_OAEP_OBERON              @PSA_CRYPTO_DRIVER_ALG_RSA_OAEP_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_CRYPT_OBERON    @PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_CRYPT_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_SIGN_OBERON     @PSA_CRYPTO_DRIVER_ALG_RSA_PKCS1V15_SIGN_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_RSA_PSS_OBERON               @PSA_CRYPTO_DRIVER_ALG_RSA_PSS_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_1_OBERON                 @PSA_CRYPTO_DRIVER_ALG_SHA_1_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_224_OBERON               @PSA_CRYPTO_DRIVER_ALG_SHA_224_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_256_OBERON               @PSA_CRYPTO_DRIVER_ALG_SHA_256_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_384_OBERON               @PSA_CRYPTO_DRIVER_ALG_SHA_384_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SHA_512_OBERON               @PSA_CRYPTO_DRIVER_ALG_SHA_512_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_STREAM_CIPHER_OBERON         @PSA_CRYPTO_DRIVER_ALG_STREAM_CIPHER_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_TLS12_PRF_OBERON             @PSA_CRYPTO_DRIVER_ALG_TLS12_PRF_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_TLS12_PSK_TO_MS_OBERON       @PSA_CRYPTO_DRIVER_ALG_TLS12_PSK_TO_MS_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_TLS12_ECJPAKE_TO_PMS_OBERON  @PSA_CRYPTO_DRIVER_ALG_TLS12_ECJPAKE_TO_PMS_OBERON@

#cmakedefine PSA_CRYPTO_DRIVER_RSA_KEY_SIZE_1024_OBERON         @PSA_CRYPTO_DRIVER_RSA_KEY_SIZE_1024_OBERON@

#cmakedefine PSA_CRYPTO_DRIVER_ECC_MONTGOMERY_255_OBERON        @PSA_CRYPTO_DRIVER_ECC_MONTGOMERY_255_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_224_OBERON           @PSA_CRYPTO_DRIVER_ECC_SECP_R1_224_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_256_OBERON           @PSA_CRYPTO_DRIVER_ECC_SECP_R1_256_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_SECP_R1_384_OBERON           @PSA_CRYPTO_DRIVER_ECC_SECP_R1_384_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ECC_TWISTED_EDWARDS_255_OBERON   @PSA_CRYPTO_DRIVER_ECC_TWISTED_EDWARDS_255_OBERON@

#cmakedefine PSA_CRYPTO_DRIVER_ENTROPY_ZEPHYR                   @PSA_CRYPTO_DRIVER_ENTROPY_ZEPHYR@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_JPAKE_OBERON                 @PSA_CRYPTO_DRIVER_ALG_JPAKE_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SPAKE2P_OBERON               @PSA_CRYPTO_DRIVER_ALG_SPAKE2P_OBERON@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_SRP_OBERON                   @PSA_CRYPTO_DRIVER_ALG_SRP_OBERON@

/* Nordic specific */
#cmakedefine PSA_NATIVE_ITS                                     @PSA_NATIVE_ITS@
#cmakedefine PSA_EITS_BACKEND_ZEPHYR                            @PSA_EITS_BACKEND_ZEPHYR@
#cmakedefine PSA_CRYPTO_SECURE                                  @PSA_CRYPTO_SECURE@
#cmakedefine PSA_CRYPTO_DRIVER_ALG_PRNG_TEST                    @PSA_CRYPTO_DRIVER_ALG_PRNG_TEST@

/* PSA and drivers */
#cmakedefine MBEDTLS_PSA_CRYPTO_C
#cmakedefine MBEDTLS_USE_PSA_CRYPTO
#cmakedefine MBEDTLS_PSA_CRYPTO_STORAGE_C
/* MBEDTLS_PSA_CRYPTO_DRIVERS is defined to 1 by TF-M's build system. */
#cmakedefine MBEDTLS_PSA_CRYPTO_DRIVERS                         @MBEDTLS_PSA_CRYPTO_DRIVERS@
#cmakedefine MBEDTLS_PSA_CRYPTO_CLIENT
#cmakedefine MBEDTLS_PSA_CRYPTO_EXTERNAL_RNG

/* TF-M */
#cmakedefine MBEDTLS_PSA_CRYPTO_SPM
#cmakedefine MBEDTLS_PSA_CRYPTO_KEY_ID_ENCODES_OWNER

/* Platform */
#cmakedefine MBEDTLS_PLATFORM_C
#cmakedefine MBEDTLS_PLATFORM_MEMORY
#cmakedefine MBEDTLS_NO_PLATFORM_ENTROPY
#cmakedefine MBEDTLS_MEMORY_BUFFER_ALLOC_C

/* Platform configurations for _ALT defines */
#cmakedefine MBEDTLS_PLATFORM_EXIT_ALT
#cmakedefine MBEDTLS_PLATFORM_FPRINTF_ALT
#cmakedefine MBEDTLS_PLATFORM_PRINTF_ALT
#cmakedefine MBEDTLS_PLATFORM_SNPRINTF_ALT
#cmakedefine MBEDTLS_PLATFORM_SETUP_TEARDOWN_ALT
#cmakedefine MBEDTLS_ENTROPY_HARDWARE_ALT
#cmakedefine MBEDTLS_THREADING_C
#cmakedefine MBEDTLS_THREADING_ALT
#cmakedefine MBEDTLS_PLATFORM_ZEROIZE_ALT

/* Legacy configurations for _ALT defines */
#cmakedefine MBEDTLS_AES_SETKEY_ENC_ALT
#cmakedefine MBEDTLS_AES_SETKEY_DEC_ALT
#cmakedefine MBEDTLS_AES_ENCRYPT_ALT
#cmakedefine MBEDTLS_AES_DECRYPT_ALT
#cmakedefine MBEDTLS_AES_ALT
#cmakedefine MBEDTLS_CMAC_ALT
#cmakedefine MBEDTLS_CCM_ALT
#cmakedefine MBEDTLS_GCM_ALT
#cmakedefine MBEDTLS_CHACHA20_ALT
#cmakedefine MBEDTLS_POLY1305_ALT
#cmakedefine MBEDTLS_CHACHAPOLY_ALT
#cmakedefine MBEDTLS_DHM_ALT
#cmakedefine MBEDTLS_ECP_ALT
#cmakedefine MBEDTLS_ECDH_GEN_PUBLIC_ALT
#cmakedefine MBEDTLS_ECDH_COMPUTE_SHARED_ALT
#cmakedefine MBEDTLS_ECDSA_GENKEY_ALT
#cmakedefine MBEDTLS_ECDSA_SIGN_ALT
#cmakedefine MBEDTLS_ECDSA_VERIFY_ALT
#cmakedefine MBEDTLS_ECJPAKE_ALT
#cmakedefine MBEDTLS_RSA_ALT
#cmakedefine MBEDTLS_SHA1_ALT
#cmakedefine MBEDTLS_SHA224_ALT
#cmakedefine MBEDTLS_SHA256_ALT
#cmakedefine MBEDTLS_SHA384_ALT
#cmakedefine MBEDTLS_SHA512_ALT

/* Legacy configuration for RNG */
#cmakedefine MBEDTLS_ENTROPY_FORCE_SHA256
#cmakedefine MBEDTLS_ENTROPY_MAX_SOURCES                        @MBEDTLS_ENTROPY_MAX_SOURCES@
#cmakedefine MBEDTLS_NO_PLATFORM_ENTROPY

/* Legacy configurations for mbed TLS APIs */
#cmakedefine MBEDTLS_CIPHER_C
//#define MBEDTLS_PK_C                                       @MBEDTLS_PK_C@
//#define MBEDTLS_PK_WRITE_C                                 @MBEDTLS_PK_WRITE_C@
#cmakedefine MBEDTLS_MD_C

/* Max curve bits for PSA APIs */
#cmakedefine PSA_VENDOR_ECC_MAX_CURVE_BITS                      @PSA_VENDOR_ECC_MAX_CURVE_BITS@


/* TLS/DTLS configurations */
#cmakedefine MBEDTLS_SSL_ALL_ALERT_MESSAGES
#cmakedefine MBEDTLS_SSL_DTLS_CONNECTION_ID
#cmakedefine MBEDTLS_SSL_CONTEXT_SERIALIZATION
#cmakedefine MBEDTLS_SSL_DEBUG_ALL
#cmakedefine MBEDTLS_SSL_ENCRYPT_THEN_MAC
#cmakedefine MBEDTLS_SSL_EXTENDED_MASTER_SECRET
#cmakedefine MBEDTLS_SSL_KEEP_PEER_CERTIFICATE
#cmakedefine MBEDTLS_SSL_RENEGOTIATION
#cmakedefine MBEDTLS_SSL_MAX_FRAGMENT_LENGTH
#cmakedefine MBEDTLS_SSL_PROTO_TLS1_2
#cmakedefine MBEDTLS_SSL_PROTO_DTLS
#cmakedefine MBEDTLS_SSL_ALPN
#cmakedefine MBEDTLS_SSL_DTLS_ANTI_REPLAY
#cmakedefine MBEDTLS_SSL_DTLS_HELLO_VERIFY
#cmakedefine MBEDTLS_SSL_DTLS_SRTP
#cmakedefine MBEDTLS_SSL_DTLS_CLIENT_PORT_REUSE
#cmakedefine MBEDTLS_SSL_SESSION_TICKETS
#cmakedefine MBEDTLS_SSL_EXPORT_KEYS
#cmakedefine MBEDTLS_SSL_SERVER_NAME_INDICATION
#cmakedefine MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH
#cmakedefine MBEDTLS_SSL_CACHE_C
#cmakedefine MBEDTLS_SSL_TICKET_C
#cmakedefine MBEDTLS_SSL_CLI_C
#cmakedefine MBEDTLS_SSL_SRV_C
#cmakedefine MBEDTLS_SSL_TLS_C
#cmakedefine MBEDTLS_SSL_IN_CONTENT_LEN                         @MBEDTLS_SSL_IN_CONTENT_LEN@
#cmakedefine MBEDTLS_SSL_OUT_CONTENT_LEN                        @MBEDTLS_SSL_OUT_CONTENT_LEN@
#cmakedefine MBEDTLS_SSL_CIPHERSUITES                           @MBEDTLS_SSL_CIPHERSUITES@

#cmakedefine MBEDTLS_X509_RSASSA_PSS_SUPPORT
#cmakedefine MBEDTLS_X509_USE_C
#cmakedefine MBEDTLS_X509_CRT_PARSE_C
#cmakedefine MBEDTLS_X509_CRL_PARSE_C
#cmakedefine MBEDTLS_X509_CSR_PARSE_C
#cmakedefine MBEDTLS_X509_CREATE_C
#cmakedefine MBEDTLS_X509_CRT_WRITE_C
#cmakedefine MBEDTLS_X509_CSR_WRITE_C
#cmakedefine MBEDTLS_X509_REMOVE_INFO

#cmakedefine MBEDTLS_KEY_EXCHANGE_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_DHE_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDHE_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_RSA_PSK_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_DHE_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDHE_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECDH_RSA_ENABLED
#cmakedefine MBEDTLS_KEY_EXCHANGE_ECJPAKE_ENABLED

/* Controlling some MPI sizes */
#cmakedefine MBEDTLS_MPI_WINDOW_SIZE       @MBEDTLS_MPI_WINDOW_SIZE@ /**< Maximum window size used. */
#cmakedefine MBEDTLS_MPI_MAX_SIZE          @MBEDTLS_MPI_MAX_SIZE@ /**< Maximum number of bytes for usable MPIs. */

#include "psa/psa_crypto_config_oberon.h"

#endif /* PSA_CRYPTO_CONFIG_H */
